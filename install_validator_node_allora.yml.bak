---
- name: Install Allora Validator Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: moniker
      prompt: "Enter your node name"
      private: false

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Install required packages
      apt:
        name:
          - curl
          - git
          - jq
          - build-essential
          - gcc
        state: present

    - name: Check if Docker is installed
      command: docker --version
      register: docker_version
      failed_when: docker_version.rc != 0
      ignore_errors: yes

    - name: Install Docker if not present
      apt:
        name: docker.io
        state: present
      when: docker_version.failed

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Install Docker Compose plugin
      shell: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose

    - name: Check Docker Compose installation
      command: docker compose version
      register: docker_compose_check
      failed_when: docker_compose_check.rc != 0

    - name: Install Go
      shell: |
        curl -OL https://golang.org/dl/go1.22.4.linux-amd64.tar.gz
        sudo tar -C /usr/local -xvf go1.22.4.linux-amd64.tar.gz
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"

    - name: Add Go to PATH
      lineinfile:
        path: ~/.profile
        line: 'export PATH=$PATH:/usr/local/go/bin'
        create: yes

    - name: Add GOPATH to PATH
      shell: |
        echo 'export PATH=$PATH:$(go env GOPATH)/bin' >> ~/.profile
      args:
        executable: /bin/bash

    - name: Source profile for Go
      shell: |
        source ~/.profile
      args:
        executable: /bin/bash

    - name: Run install script for allorad
      shell: |
        curl -sSL https://raw.githubusercontent.com/allora-network/allora-chain/main/install.sh | bash -s -- v0.0.8
      args:
        executable: /bin/bash

    - name: Add allorad to PATH
      lineinfile:
        path: ~/.profile
        line: 'export PATH=$PATH:/root/.local/bin'
        create: yes

    - name: Source profile for allorad
      shell: |
        source ~/.profile
      args:
        executable: /bin/bash

    - name: Verify allorad binary in PATH
      shell: |
        source ~/.profile
        which allorad
      args:
        executable: /bin/bash
      register: allorad_check
      failed_when: allorad_check.rc != 0

    - name: Clone Allora Chain repository
      git:
        repo: 'https://github.com/allora-network/allora-chain.git'
        dest: "{{ ansible_env.HOME }}/allora-chain"
        version: "main"

    - name: Run make install
      shell: |
        cd {{ ansible_env.HOME }}/allora-chain
        make install
      args:
        executable: /bin/bash

    - name: Download and update genesis file
      shell: |
        curl -o {{ ansible_env.HOME }}/allora-chain/config/genesis.json https://raw.githubusercontent.com/allora-network/allora-chain/main/networks/testnet/genesis.json
      args:
        executable: /bin/bash

    - name: Run l1_node.sh script to initialize node and generate keys
      shell: |
        cd {{ ansible_env.HOME }}/allora-chain/scripts
        sh ./l1_node.sh
      args:
        executable: /bin/bash
      environment:
        PATH: "/root/.local/bin:{{ ansible_env.PATH }}"

    - name: Create systemd service file for Allora Validator Node
      template:
        src: templates/allora-node.service.j2
        dest: /etc/systemd/system/allora-node.service

    - name: Reload systemd daemon
      systemd:
        daemon_reload: true

    - name: Enable and start Allora Validator Node service
      systemd:
        name: allora-node
        enabled: true
        state: started
